% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/seedDispersalLANDIS.R
\docType{methods}
\name{LANDISDisp}
\alias{LANDISDisp}
\title{Simulate a LANDIS-II dispersal process on a landscape.}
\usage{
LANDISDisp(
  dtSrc,
  dtRcv,
  pixelGroupMap,
  species,
  dispersalFn = WardFast,
  b = 0.01,
  k = 0.95,
  plot.it = FALSE,
  successionTimestep,
  verbose = getOption("LandR.verbose", TRUE),
  useParallel,
  ...
)
}
\arguments{
\item{dtSrc}{data.table}

\item{dtRcv}{data.table}

\item{pixelGroupMap}{map}

\item{species}{Landis object from initial species file}

\item{dispersalFn}{An expression that can take a "dis" argument. See details. Default is "Ward"}

\item{b}{Landis ward seed dispersal calibration coefficient (set to 0.01 in Landis)}

\item{k}{Landis ward seed dispersal the probability that seed will disperse within
the effective distance (eg., 0.95)}

\item{plot.it}{If TRUE, then plot the raster at every iteraction, so one can watch the
LANDISDisp event grow.}

\item{successionTimestep}{integer. The time in timeunits between succession (i.e., dispersal) events.}

\item{verbose}{Logical. Whether a somewhat verbose output to screen occurs. For debugging.}

\item{useParallel}{ANY. if the class of this arguement is logical, whether the function creates the cluster based on TRue and FALSE.
if the class of this arguement is cluster, the function will use this cluster to implement the parallel computation.}

\item{...}{Additional parameters. Currently none}

\item{effDist}{Landis species- and ecoregion-specific effective distance parameter}

\item{maxDist}{Landis species- and ecoregion-specific effective distance parameter}
}
\value{
A numeric vector of raster pixel indices, in the same resolution and extent as
\code{seedSrc} raster.
}
\description{
Simulate seed dispersal using user defined function. This is a "receiving
pixel" focused dispersal approach. It is the "potentially receiving" cell
that looks around itself for potential seed sources. If it finds a single
seed source, that passes the probability function described by the
dispersalFn, then the cluster ends and the receiving cell index is returned
as part of a vector of indices of all successfully cells that received seeds.
This function can therefore only be used for a relatively specific situation
where there is a yes/no returned for each potential receiving cell, i.e., not
abundance. This function is also not cumulative, i.e,. there is no higher
abundance of seeds received if a receiving cell has lots of seed sources
around it vs. a single seed source. The difference will come with a higher
probability of successfully receiving a "seed".
}
\details{
\code{dispersalFn} must be an expression that returns a probability
distribution. Because it is a dispersal kernal, it must be a probability
distribution. The expression that can take an argument named "dis" (without
quotes) as this will be calculated internally and represents the distance
from the initial (receiving) pixel and all active pixels within that cluster
of active pixels. \code{SpaDES} includes the \code{\link{Ward}} kernel as
defined in the LANDIS-II documentation.
}
\examples{
library(raster)
library(SpaDES.tools)

# Make random forest cover map
a <- raster(extent(0, 1e4, 0, 1e4), res = 100)
hab <- gaussMap(a, speedup = 1) # if raster is large (>1e6 pixels), use speedup>1
names(hab) <- "hab"

seedSrc <- hab > 5
setColors(seedSrc, 1) <- c("white", "black")

seedRcv <- hab > 5
pixelGroupMap <- raster(seedRcv)
system.time(seeds <- LANDISDisp(seedSrc, seedRcv = seedRcv, maxDist = 250, plot.it = TRUE))
seedRcvRaster <- raster(seedSrc)
if (length(seeds) > 0) {
  seedRcvRaster[seeds] <- 1
  Plot(seedRcvRaster, cols = "black")
}

}
\author{
Eliot McIntire
}
